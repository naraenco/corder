<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picConfirm.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZAAAAAeCAYAAAACckjQAAAABGdBTUEAALGPC/xhBQAAAVZJREFUeF7t
        2tGN4kAQBNDNlWgIhCzIgRQIgQy4baQ5ebmym73PmdfSE3bZ/nVpxnx9zxMA/kMMAaATQwDoxBAAOjEE
        gE4MAaATQwDoxBAAOjEEgE4MYWq32+1Zczqd/mZ1XFPXtvd+4n6/v55N12BiMYTpjJf83lwul9dvKpDz
        +fy6NubxePy4rkBYVAxhOXsrkFEe27wKpGacKxAWFUOY0iiJ7Yxi2CuQOq/ZZmO1Ur91rkBYVAxhOqMg
        6mX/nlVJKBD4tRjCdI4KpLJxPOZ6vb7usYUFu2IIU6pSSFPlsbcCKT6iQxRDmNrYlqrSGNlRgXQUCIuK
        IUzlfXsqzSgVBQIfiyHwZmx/bVctgwJhUTGEKX26EknPHhUILCqGsJzuG4gCgX/EEJbzaYEcTf1bKz0L
        k4ohAHRiCACdGAJAJ4YA0IkhAHRiCACdGAJAJ4YAcODr+Qfe8U3joFtCigAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="picTitlebar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9t9h/g+DRRTfOrFDmAAAAABJRU5ErkJggg==
</value>
  </data>
</root>